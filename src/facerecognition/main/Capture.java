package facerecognition.main;

import facerecognition.util.ImgShow;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.opencv.core.Core;
import org.opencv.core.Mat;
import org.opencv.core.MatOfByte;
import org.opencv.highgui.Highgui;
import org.opencv.highgui.VideoCapture;

public class Capture extends javax.swing.JFrame {

    private DaemonThread myThread = null;
    int count = 0;
    VideoCapture webSource = null;

    Mat frame = new Mat();
    MatOfByte mem = new MatOfByte();

    ImgShow img = new ImgShow();
    String dir = System.getProperty("user.home") + File.separator + "Documents";

    class DaemonThread implements Runnable {

        protected volatile boolean runnable = false;

        @Override
        public void run() {
            synchronized (this) {
                while (runnable) {
                    if (webSource.grab()) {
                        try {
                            webSource.retrieve(frame);
                            Highgui.imencode(".bmp", frame, mem);
                            Image im = ImageIO.read(new ByteArrayInputStream(mem.toArray()));

                            BufferedImage buff = (BufferedImage) im;
                            Graphics g = spCaptura.getGraphics();

                            if (g.drawImage(buff, 0, 0, getWidth(), getHeight() - 150, 0, 0, buff.getWidth(), buff.getHeight(), null)) {
                                if (runnable == false) {
                                    System.out.println("Going to wait()");
                                    this.wait();
                                }
                            }
                        } catch (Exception ex) {
                            System.out.println("Error");
                        }
                    }
                }
            }
        }
    }

    /**
     * Creates new form Capture
     */
    public Capture() {
        initComponents();
        this.setLocationRelativeTo(null);
        chooseFilter.setLocationRelativeTo(null);
        jFileChooser1.addChoosableFileFilter(new FileNameExtensionFilter("(*.jpg)", "jpg"));
        jFileChooser1.setAcceptAllFileFilterUsed(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        chooseFilter = new javax.swing.JFrame();
        gauss = new javax.swing.JRadioButton();
        gray = new javax.swing.JRadioButton();
        threshold = new javax.swing.JRadioButton();
        btAplicar = new javax.swing.JButton();
        btCancelar = new javax.swing.JButton();
        filterGroup = new javax.swing.ButtonGroup();
        spCaptura = new javax.swing.JScrollPane();
        lbCaptura = new javax.swing.JLabel();
        btIniciar = new javax.swing.JButton();
        btCapturar = new javax.swing.JButton();
        btParar = new javax.swing.JButton();
        btFechar = new javax.swing.JButton();
        btFiltro = new javax.swing.JButton();

        jFileChooser1.setCurrentDirectory(new java.io.File("C:\\Users\\TDNT\\Documents\\NetBeansProjects\\FaceRecognition"));
        jFileChooser1.setDialogTitle("Salvar Como");

        chooseFilter.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        chooseFilter.setTitle("Escolha um filtro");
        chooseFilter.setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        chooseFilter.setMinimumSize(new java.awt.Dimension(400, 200));
        chooseFilter.setName("chooseFilter"); // NOI18N
        chooseFilter.setResizable(false);
        chooseFilter.getContentPane().setLayout(null);

        filterGroup.add(gauss);
        gauss.setText("Desfoque Gaussiano");
        chooseFilter.getContentPane().add(gauss);
        gauss.setBounds(10, 20, 150, 28);

        filterGroup.add(gray);
        gray.setText("Escala de Cinza");
        chooseFilter.getContentPane().add(gray);
        gray.setBounds(10, 50, 150, 28);

        filterGroup.add(threshold);
        threshold.setText("Threshold (Limiar)");
        chooseFilter.getContentPane().add(threshold);
        threshold.setBounds(10, 80, 150, 28);

        btAplicar.setText("Aplicar");
        btAplicar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAplicarActionPerformed(evt);
            }
        });
        chooseFilter.getContentPane().add(btAplicar);
        btAplicar.setBounds(120, 130, 49, 24);

        btCancelar.setText("Cancelar");
        btCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarActionPerformed(evt);
            }
        });
        chooseFilter.getContentPane().add(btCancelar);
        btCancelar.setBounds(210, 130, 80, 24);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("APS - 6ยบ Semestre");
        setMinimumSize(new java.awt.Dimension(696, 572));
        setPreferredSize(new java.awt.Dimension(696, 572));
        getContentPane().setLayout(null);

        spCaptura.setViewportView(lbCaptura);

        getContentPane().add(spCaptura);
        spCaptura.setBounds(10, 11, 660, 420);

        btIniciar.setText("Iniciar");
        btIniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btIniciarActionPerformed(evt);
            }
        });
        getContentPane().add(btIniciar);
        btIniciar.setBounds(10, 500, 45, 24);

        btCapturar.setText("Capturar");
        btCapturar.setEnabled(false);
        btCapturar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCapturarActionPerformed(evt);
            }
        });
        getContentPane().add(btCapturar);
        btCapturar.setBounds(90, 500, 90, 24);

        btParar.setText("Parar");
        btParar.setEnabled(false);
        btParar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPararActionPerformed(evt);
            }
        });
        getContentPane().add(btParar);
        btParar.setBounds(200, 500, 42, 24);

        btFechar.setText("Fechar");
        btFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFecharActionPerformed(evt);
            }
        });
        getContentPane().add(btFechar);
        btFechar.setBounds(600, 500, 73, 24);

        btFiltro.setText("Aplicar Filtro");
        btFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFiltroActionPerformed(evt);
            }
        });
        getContentPane().add(btFiltro);
        btFiltro.setBounds(483, 500, 100, 24);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btIniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btIniciarActionPerformed
        // TODO add your handling code here:
        webSource = new VideoCapture(0);
        myThread = new DaemonThread();
        Thread t = new Thread(myThread);
        t.setDaemon(true);
        myThread.runnable = true;
        t.start();
        btIniciar.setEnabled(false);
        btCapturar.setEnabled(true);
        btParar.setEnabled(true);
    }//GEN-LAST:event_btIniciarActionPerformed

    private void btCapturarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCapturarActionPerformed
        // TODO add your handling code here:
        img.show(frame);
        img.saveImage(frame);
    }//GEN-LAST:event_btCapturarActionPerformed

    private void btPararActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPararActionPerformed
        // TODO add your handling code here:
        myThread.runnable = false;
        btParar.setEnabled(false);
        btIniciar.setEnabled(true);
        btCapturar.setEnabled(false);
        btParar.setEnabled(false);

        webSource.release();
    }//GEN-LAST:event_btPararActionPerformed

    private void btFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFecharActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_btFecharActionPerformed

    private void btFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFiltroActionPerformed
        // TODO add your handling code here:
        chooseFilter.setVisible(true);
    }//GEN-LAST:event_btFiltroActionPerformed

    private void btCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarActionPerformed
        // TODO add your handling code here:
        chooseFilter.dispose();
    }//GEN-LAST:event_btCancelarActionPerformed

    private void btAplicarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAplicarActionPerformed
        // TODO add your handling code here:
        if (gauss.isSelected()) {
            try {
                new ImgProcess().blurProcess();
            } catch (IOException ex) {
                Logger.getLogger(Capture.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (gray.isSelected()) {
            try {
                new ImgProcess().grayProcess();
            } catch (IOException ex) {
                Logger.getLogger(Capture.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (threshold.isSelected()) {
            try {
                new ImgProcess().thresholdProcess();
            } catch (IOException ex) {
                Logger.getLogger(Capture.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Selecione um filtro.");
        }
    }//GEN-LAST:event_btAplicarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        System.loadLibrary(Core.NATIVE_LIBRARY_NAME);

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Capture.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Capture.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Capture.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Capture.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Capture().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAplicar;
    private javax.swing.JButton btCancelar;
    private javax.swing.JButton btCapturar;
    private javax.swing.JButton btFechar;
    private javax.swing.JButton btFiltro;
    private javax.swing.JButton btIniciar;
    private javax.swing.JButton btParar;
    private javax.swing.JFrame chooseFilter;
    private javax.swing.ButtonGroup filterGroup;
    private javax.swing.JRadioButton gauss;
    private javax.swing.JRadioButton gray;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel lbCaptura;
    private javax.swing.JScrollPane spCaptura;
    private javax.swing.JRadioButton threshold;
    // End of variables declaration//GEN-END:variables
}
